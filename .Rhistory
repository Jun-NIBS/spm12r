library(spm12r)
system.file(package="spm12")
system.file(package="spm12r")
spm_dir = system.file("spm12", package="spm12r")
script_dir = system.file(script_name, package="spm12r")
script_name = "Segment"
spm_dir = system.file("spm12", package="spm12r")
script_dir = system.file(script_name, package="spm12r")
script_dir
spm_dir = system.file("spm12", package="spm12r")
script_dir = system.file("scripts", package="spm12r")
script_dir
script_name = "Segment"
spm_dir = system.file("spm12", package="spm12r")
scripts = system.file("scripts",
paste0(script_name, c("_job.m", ".m")),
package="spm12r")
scripts
names(scripts) = c("job", "script")
scripts
spm_dir = system.file("spm12", package="spm12r")
scripts = system.file("scripts",
paste0(script_name, c("_job.m", ".m")),
package="spm12r")
names(scripts) = c("job", "script")
library(spm12r)
scripts = spm12_script("Segment")
scripts
l_scripts = lapply(scripts, readLines)
l_scripts
scripts
#' @title Find SPM12 Script
#'
#' @description Copies the SPM12 script from the scripts directory
#' to a temporary file
#' @param script_name Name of the script filename without ".m" ext
#' @export
#' @return Chracter vector of script paths
#' @examples spm12_script(script_name = "Segment")
spm12_script <- function(script_name){
spm_dir = system.file("spm12", package="spm12r")
scripts = system.file("scripts",
paste0(script_name, c("_job.m", ".m")),
package="spm12r")
tdir = tempdir()
file.copy(scripts, to = tdir)
scripts = file.path(tdir, basename(scripts))
names(scripts) = c("job", "script")
return(scripts)
}
scripts = spm12_script("Segment")
scripts
spm_dir = system.file("spm12", package="spm12r")
m_scripts = system.file("scripts",
paste0(script_name, c(".m")),
package="spm12r")
job_scripts = system.file("scripts",
paste0(script_name, c("_job.m")),
package="spm12r")
scripts = c(job = job_scripts, script = m_scripts)
job_scripts
scripts
scripts = scripts[scripts != "", drop = FALSE]
scripts
#' @title Find SPM12 Script
#'
#' @description Copies the SPM12 script from the scripts directory
#' to a temporary file
#' @param script_name Name of the script filename without ".m" ext
#' @export
#' @return Chracter vector of script paths
#' @examples spm12_script(script_name = "Segment")
spm12_script <- function(script_name){
spm_dir = system.file("spm12", package="spm12r")
m_scripts = system.file("scripts",
paste0(script_name, c(".m")),
package="spm12r")
job_scripts = system.file("scripts",
paste0(script_name, c("_job.m")),
package="spm12r")
scripts = c(job = job_scripts, script = m_scripts)
scripts = scripts[scripts != "", drop = FALSE]
nn = names(scripts)
if (length(scripts) > 0){
tdir = tempdir()
file.copy(scripts, to = tdir)
scripts = file.path(tdir, basename(scripts))
names(scripts) = nn
}
return(scripts)
}
scripts = spm12_script("Segment")
scripts
scripts = spm12_script("Segment")
m = readLines(scripts['script'])
job = readLines(scripts['job'])
job
filename = "blah.nii"
job = gsub("%filename%", filenmae)
job = gsub("%filename%", filename, job)
job
m
library(spm12r)
scripts = spm12_script("Segment")
m = readLines(scripts['script'])
job = readLines(scripts['job'])
job = gsub("%filename%", filename, job)
job
m
library(spm12r)
library(matlabr)
filename = "~/Desktop/scratch/SUBJ0001-01-MPRAGE_N4_reorient.nii"
filename = path.expand("~/Desktop/scratch/SUBJ0001-01-MPRAGE_N4_reorient.nii")
options(matlab.path='/Applications/MATLAB_R2014b.app/bin')
filename = path.expand("~/Desktop/scratch/SUBJ0001-01-MPRAGE_N4_reorient.nii")
scripts = spm12_script("Segment")
m = readLines(scripts['script'])
#   options(matlab.path='/Applications/MATLAB_R2014b.app/bin')
# filename = path.expand("~/Desktop/scratch/SUBJ0001-01-MPRAGE_N4_reorient.nii")
#
#   infile = checkimg(infile, gzipped=FALSE)
#   infile = path.expand(infile)
#   if (grepl("\\.gz$", infile)){
#     infile = gunzip(infile, remove=FALSE, temporary=TRUE,
#                     overwrite=TRUE)
#   } else {
#     infile = paste0(nii.stub(infile), ".nii")
#   }
#
job = readLines(scripts['job'])
job = gsub("%filename%", filename, job)
m = gsub("%jobfile%", scripts['job'], m)
res = run_matlab_script(m)
res
run_matlab_script
m
scripts = spm12_script("Segment")
m = readLines(scripts['script'])
#   options(matlab.path='/Applications/MATLAB_R2014b.app/bin')
# filename = path.expand("~/Desktop/scratch/SUBJ0001-01-MPRAGE_N4_reorient.nii")
#
#   infile = checkimg(infile, gzipped=FALSE)
#   infile = path.expand(infile)
#   if (grepl("\\.gz$", infile)){
#     infile = gunzip(infile, remove=FALSE, temporary=TRUE,
#                     overwrite=TRUE)
#   } else {
#     infile = paste0(nii.stub(infile), ".nii")
#   }
#
job = readLines(scripts['job'])
job = gsub("%filename%", filename, job)
m = gsub("%jobfile%", scripts['job'], m)
writeLines(m, con=scripts['script'])
writeLines(job, con=scripts['job'])
res = run_matlab_script(scripts['script'])
res
1/1000  * 0.99/ (1/1000 * 0.99 + 999/1000 * 0.99)
1/1000  * 0.99/ (1/1000 * 0.99 + 999/1000 * (1-0.99)
)
dir(tdir)
dir(tempdir())
library(spm12r)
rm(list=ls())
scripts = spm12_script("Segment")
m = readLines(scripts['script'])
options(matlab.path='/Applications/MATLAB_R2014b.app/bin')
filename = path.expand("~/Desktop/scratch/SUBJ0001-01-MPRAGE_N4_reorient.nii")
scripts
job = readLines(scripts['job'])
job = gsub("%filename%", filename, job)
job
m = gsub("%jobfile%", scripts['job'], m)
m
writeLines(m, con=scripts['script'])
writeLines(job, con=scripts['job'])
res = run_matlab_script(scripts['script'])
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(devtools)
add_travis()
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
spmdir = spm_dir()
scripts = spm12_script("Segment")
m = readLines(scripts['script'])
library(spm12r)
spmdir = spm_dir()
scripts = spm12_script("Segment")
m = readLines(scripts['script'])
m
library(spm12r)
library(spm12r)
?checkimg
library(fslr)
?checkimg
checkimg
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
paste(NULL, "hey")
library(spm12r)
library(spm12r)
x = "hey"
names(x)  = '%blah%'
x
library(spm12r)
spm12_script
?spm12_script
library(spm12r)
?file.copy
library(spm12r)
library(spm12r)
library(matlabr)
rvec_to_matlab
rvec_to_matlabclist
rvec_to_matlab
library(spm12r)
library(fslr); other.files = lapply(1:3, function(x) readNIfTI("~/Desktop/scratch/c1SUBJ0001-01-MPRAGE.nii", reorient=FALSE))
other.files = filename_check(other.files)
other.files
cell = rvec_to_matlabcell(other.files, transpose = TRUE)
cell
jobvec = c(filename, other.files, spmdir)
names(jobvec) = c("%filename%", "%resample%", "%spmdir%")
spm12_script("Segment")
library(spm12r)
spm12_script("Segment")
library(spm12r)
rvec_to_matlab(1:10)
?rvec_to_matlab(1:10)
?rvec_to_matlab
rvec_to_matlab
library(matlabr)
?rvec_to_matlab
filename = "~/Desktop/scratch//100-318_20070723_0957_CT_3_CT_Head-_SS_0.01_SyN_ROI.nii.gz"
filename = filename_check(filename)
library(spm12r)
filename = filename_check(filename)
filename
library(fslr)
fslval(filename, keyword = "dim3")
slice_order = 1:20
slice_order = rvec_to_matlab(slice_order, row=TRUE)
nslices = 37
slice_order = 1:nslices
slice_order/2
nslices/2
nslices = 34
nslices/2
slice_order
median(slice_order)
median(seq(length(slice_order)))
slice_order[median(seq(length(slice_order)))]
[median(seq(nslices))
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(fslr)
?check_nifti
library(spm12r)
library(spm12r)
library(matlabr)
?filename_check
?checknii
?checkimg
?tempimg
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
?acpc_reorient
library(spm12r)
library(spm12r)
library(matlabr)
rvec_to_matlab(NULL)
rvec_to_matlabcell(NULL)
rvec_to_matlab("hey", "ho")
rvec_to_matlabcell(c("hey", "ho"))
library(spm12r)
library(spm12r)
library(spm12r)
library(fslr)
library(matlabr)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(cttools)
library(spm12r)
library(extrantsr)
?reg_whitestripe
library(WhiteStripe)
whitestripe
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
library(spm12r)
