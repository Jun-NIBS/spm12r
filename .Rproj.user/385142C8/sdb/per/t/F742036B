{
    "contents" : "#' @title AC/PC Reorientation\n#' @description Function that AC/PC re-orients the images for SPM \n#' spatial normalization routine.  Uses nii_setOrigin from \n#' http://www.mccauslandcenter.sc.edu/CRNL/sw/spm8/spm.zip\n#' @param infiles (character) Files to reorient.  \n#' First file will be used to \n#' estimate AC/PC, then rest will be transformed\n#' @param modality T1, T2, CT, fMRI (T2*)\n#' @param spmdir (character) path for SPM8.  If NULL, assumes \n#' SPM8 is in matlabpath and so is spm8/toolbox\n#' Must have nii_setOrigin installed.  In \n#' \\code{system.file(\"\", package=\"cttools\")} from\n#' http://www.mccauslandcenter.sc.edu/CRNL/sw/spm8/spm.zip\n#' @param verbose (logical) Print diagnostic output\n#' @param ... Arguments to pass to \\code{\\link{run_matlab_code}}\n#' @return Exit code from MATLAB.  If not zero, there was an error\n#' @import fslr\n#' @import stringr\n#' @export\nacpc_reorient <- function(\n  infiles, \n  modality = c(\"T1\", \"T2\", \"CT\", \"fMRI\"),\n  spmdir = spm_dir(), \n  #   add_cttools = TRUE,\n  verbose=TRUE,\n  ...\n){\n  \n  infiles = checknii(infiles)\n  if (verbose) cat(paste0(\"\\n #Reorientation \", infiles[1], \"\\n\"))\n  matcmd = get_matlab()\n  ### gantry tilt correction - make new folder\n  ### ranem old folder - zip it and then run matlab script\n  \n  modality = match.arg(modality, \n                       c(\"T1\", \"T2\", \"CT\", \"fMRI\"))\n  modality_num = switch(modality,\n                        \"T1\"=1,\n                        \"T2\"=2,\n                        \"CT\"=3,\n                        \"fMRI\"=4)\n  \n  \n  cmd = NULL\n  if (!is.null(spmdir)){\n    spmdir = path.expand(spmdir)\n    cmd <- paste(cmd, sprintf(\"addpath(genpath('%s'));\", spmdir))\n  }\n  \n  #   if (add_cttools){\n  #     cmd <- paste(cmd, sprintf(\"addpath('%s');\", \n  #                             system.file(\"\", package=\"cttools\")))  \n  #   }\n  #   cmd <- paste(cmd, sprintf(\"addpath('%s/toolbox/rorden');\", spmdir))\n  \n  limgs = length(infiles)\n  imgs = sprintf(\"'%s',\", infiles[1])\n  if (limgs > 1){\n    for (ifile in 2:limgs){\n      imgs = paste( imgs, sprintf(\"'%s',\", \n                                  infiles[ifile]))\n    }\n  }\n  \n  imgs = str_trim(imgs)\n  imgs = gsub(\",$\", \"\", imgs)\n  cmd <- paste(cmd, sprintf(\"runimgs = strvcat(%s);\", imgs))\n  cmd <- paste(cmd, paste0(\"nii_setOrigin(runimgs, \", \n                           modality_num,\n                           \");\"))\n  x = run_matlab_code(cmd, ...)\n  return(x)\n}\n",
    "created" : 1432174511836.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3915797385",
    "id" : "F742036B",
    "lastKnownWriteTime" : 1430372366,
    "path" : "~/Dropbox/Packages/spm12r/R/acpc_reorient.R",
    "project_path" : "R/acpc_reorient.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 0,
    "source_on_save" : false,
    "type" : "r_source"
}